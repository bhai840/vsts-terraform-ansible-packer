# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool: 
  name: 'infra'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: 'web'
    gradleWrapperFile: 'web/gradlew'
    gradleOptions: '-Xmx3072m'
    #javaHomeOption: 'JDKVersion'
    Set JAVA_HOME by: 'JDKVersion'
    JDK path: '/usr/lib/jvm/java-8-openjdk-amd64'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x86'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- task: CopyFiles@2
  displayName: 'Copy Files'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: |
     ansible/**
     packer/**
     terraform/**
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    OverWrite: true
    flattenFolders: true
    preserveTimestamp: true
  condition: succeededOrFailed()

- task: CopyFiles@2
  displayName: 'Copy war file'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: webapp'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: webapp
  condition: succeededOrFailed()
  

